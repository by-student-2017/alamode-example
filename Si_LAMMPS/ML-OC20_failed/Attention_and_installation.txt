-------------------------------------------------------------------------------------------------
Bad news. Even the phonon dispersion of Si could not be calculated correctly with my own ability.
-------------------------------------------------------------------------------------------------
- For in.lmp
Please, change "username" for your PC.

pair_style      oc20  /home/username/lammps/potentials/OC20DRIVER
#pair_style      oc20/gpu /home/username/lammps/potentials/OC20DRIVER
-------------------------------------------------------------------------------------------------
- Installation of Open Catalyst Project (OCP)
1. wget https://repo.anaconda.com/miniconda/Miniconda3-py38_4.12.0-Linux-x86_64.sh
  (https://docs.conda.io/en/latest/miniconda.html)
2. chmod +x Miniconda3-py38_4.12.0-Linux-x86_64.sh
3. ./Miniconda3-py38_4.12.0-Linux-x86_64.sh
4. all "yes" and "Enter"
5. bash
6. git clone https://github.com/Open-Catalyst-Project/ocp.git
7. cd ocp
8. sudo pip install conda-merge
9. conda-merge env.common.yml env.cpu.yml > env.yml
10. conda env create -f env.yml
  (11/Jul/2022) (Attention!!! Sometimes it doesn't succeed depending on the day. Even if I was lucky enough to install it, it took me more than 2 hours even in a good communication environment.)
11. conda activate ocp-models
  (python -V) (Python 3.9.13)
12. pip install -e ./
  (Successfully installed ocp-models-0.0.3)
13. pre-commit install

- Environment settings of Open Catalyst Project (OCP)
1. echo 'export LD_LIBRARY_PATH=$HOME/miniconda3/envs/ocp-models/lib:$LD_LIBRARY_PATH' >> ~/.bashrc
2. echo 'PYTHONPATH=$HOME/lammps/potentials/OC20DRIVER:$PYTHONPATH' >> ~/.bashrc
3. bash

- Installation
1. sudo apt update
2. sudo apt -y install python3.9-dev
3. sudo ln -sv /usr/include/python3.9/* /usr/include/
4. echo 'export CPATH=/usr/include/python3.9:$CPATH' >> ~/.bashrc
5. bash
6. conda activate ocp-models
  (python -V) (Python 3.9.13)
7. cd $HOME
8. git clone https://github.com/advancesoftcorp/lammps.git
9. cd lammps/src
10. make package-status
11. make yes-MC yes-QEQ yes-SNAP yes-OC20DRIVER yes-USER-MEAMC yes-USER-REAXC
12. make mpi-stubs
13. cd ~/lammps/src/MAKE
14. gedit Makefile.serial
----- (python -V) (Python 3.9.13)
LIB = -I/usr/include/python3.9/ -L/usr/lib/x86_64-linux-gnu/ -lpython3.9
-----
15. cd ~/lammps/src
16. make serial

- Dataset (Pretrained models for OCP)
(https://github.com/Open-Catalyst-Project/ocp/blob/main/MODELS.md)
1. cd ~/lammps/potentials/OC20DRIVER/oc20_checkpt
2. wget https://dl.fbaipublicfiles.com/opencatalystproject/models/2021_08/s2ef/gemnet_t_direct_h512_all.pt
  (for GemNet-dT)
3. wget https://dl.fbaipublicfiles.com/opencatalystproject/models/2021_02/s2ef/dimenetpp_all.pt
  (for DimeNet++)
4. wget https://dl.fbaipublicfiles.com/opencatalystproject/models/2020_11/s2ef/cgcnn_all.pt
  (for CGCNN) (Inorganic Crystals)
5. wget https://dl.fbaipublicfiles.com/opencatalystproject/models/2020_11/s2ef/schnet_all_large.pt
  (for SchNet) (Small Molecules)
6. wget https://dl.fbaipublicfiles.com/opencatalystproject/models/2021_08/s2ef/spinconv_force_centric_all.pt
  (for SpinConv)
Å¶ EFwT: Energy and Forces within Threshold
Å¶ MAE: Mean Absolute Error

- Example
1. cd ~/lammps/examples/OC20DRIVER
2. $HOME/lammps/src/lmp_serial < inp.lammps
3. Drag and drop "xyz.lammpstrj" to Octa.

- Environment settings of lammps
1. echo 'export PATH=$PATH:$HOME/lammps/src' >> ~/.bashrc
2. bash
3. which lmp_serial
-----(username = your PC name)
/home/username/lammps/src/lmp_serial
-----

- References  
[CL1] https://github.com/advancesoftcorp/lammps
  Fork: https://github.com/by-student-2017/lammps-7Aug2019-OC20
[CL2] https://nanolabo-doc.readthedocs.io/ja/latest/usage/ocp.html (Japanese)
[OCP1] Open Catalyst Project: https://opencatalystproject.org/
  Great America! "MIT" and "CC4" licenses! "facebook" company is cool! If true, I wanted to do it at RIKEN! If you get a white eyebrows, let's do it together including other projects! I don't think I will accept it. In my case, I will prepare potentials and DFTB+ parameters other than GNN!
[GNN1] https://www.slideshare.net/pfi/pfpneural-network-potential-2021104-qcmsr-dlap (Japanase)
-------------------------------------------------------------------------------------------------